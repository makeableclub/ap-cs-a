1. write a Student class, showing class structure and typical components:
constructor to take 3 parameters: (name, school, grade)
toString() to print out this format: "name=name-value, school=school-name, grade=grade-level"


public class Student {

}

-- see Student.java in examples




2. what consists of method signature, and types of methods
what is it, and give examples

[public|private] [returntype] [method-name] ([parameter-type param-name]);

constructor: no return;  new ...
accessor:
mutator:


3. method overload vs method override vs method overwrite
what are they? give code example to explain the concept





4. passing parameters
pass-by-value, pass-by-reference

pass-by-value!!!



public class TestParameter {
    public void changeValues(int integer, String string, Student student, ArrayList<Student> students) {
        // double it
        integer = integer * 2;
        string = string + " Well, actually it is not."
        student.setSchool("North Gate");
        student = new Student("Bella", "Las Lomas", 11);
        students.add(student);
    }

    public static void main(String args[]) {
        int int1 = 103;
        String str1 = "This is a short string.";
        Student student1 = new Student("Allan", "Las Lomas", 10);
        ArrayList<Student> studentList = new ArrayList<Student>();
        studentList.add(student1);

        TestParameter tester = new TestParameter();

        System.out.println("before changeValues() call: ")
        System.out.println( int1 );  // 103
        System.out.println( str1 );  // "This is a short string."
        System.out.println( student1.toString() );  // "Allan", "Las "
        System.out.println( studentList ); // 1 student, Allan

        tester.changeValues(int1, str1, student1, studentList);

        System.out.println("after changeValues() call: ")
        System.out.println( int1 ); // 103
        System.out.println( str1 ); // "This is a short string."
        System.out.println( student1.toString() );  // "Allan", "North Gate"
        System.out.println( studentList );  // 2 students
    }
}
